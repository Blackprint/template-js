/* Your Nodes 
 MIT Licensed */
!async function(e,t){"use strict";var a;t.exports&&t.exports!==globalThis&&Object.defineProperty(t.exports,"__esModule",{value:!0});let r=e.Blackprint.loadScope({url:import.meta.url,hasInterface:!0,hasDocs:!0}),s=r.createContext("LibraryName");s.EventSlot={slot:"my-private-event-slot"},r.registerNode("LibraryName/FeatureName/Template",((a=class extends r.Node{constructor(e){super(e);let t=this.setInterface("BPIC/LibraryName/FeatureName/Template");t.title="My Title",t.description="My Description"}init(){}update(e){}imported(e){}request(e){}syncIn(e,t){"data.value"===e&&(this.iface.data.value=t)}}).input={PortName1:r.Port.Default(Number,123)},a.output={PortName2:Number},a)),r.registerInterface("BPIC/LibraryName/FeatureName/Template",s.IFace.MyTemplate=class extends r.Interface{constructor(e){super(e),this.myData=123,this._log="...",this.data={_iface:this,get value(){return this._value},set value(e){this._value=e,this._iface.node.syncOut("data.value",e)}}}imported(e){Object.assign(this.data,e)}init(){const{IInput:e,IOutput:t,Input:a,Output:r}=this.ref}get log(){return this._log}set log(e){this._log=e}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-rename-me.mjs.map